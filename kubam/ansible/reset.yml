---
- hosts: all
  become: yes
  become_method: sudo
  tags:
  - reset
  - master
  - node
  tasks:

  - name: Reset cluster
    command: /usr/bin/kubeadm reset
    ignore_errors: yes
    tags:
    - reset

  - name: ensure old kubeadm config files were removed
    file: state=absent path={{ item }}
    with_items:
    - /etc/kubernetes/kubeadm.conf
    - /etc/kubernetes/kubeadm-master.config
    - /etc/kubernetes/kubeadm-master.conf
    - /etc/kubernetes/cloud-config
    - /etc/kubernetes/pki
    - /etc/systemd/system/kubelet.service.d
    - /var/contiv
    - /var/etcd/contiv-data
    - /tmp/contiv.yaml
    - /tmp/etcd.yaml
    - /root/.kube
    tags:
    - reset

  - name: ensure old /etc/kubernetes/ is removed when full_kube_reinstall is true
    file: state=absent path={{ item }}
    with_items:
    - /etc/kubernetes/
    - /var/lib/etcd
    when: full_kube_reinstall is defined and full_kube_reinstall
    tags:
    - reset

  - name: systemctl stop kube*.*.slice
    shell: 'for i in $(/usr/bin/systemctl list-unit-files --no-legend --no-pager -l | grep --color=never -o kube.*\.slice );do echo $i; systemctl stop $i ; done'
    tags:
    - reset

  - name: Remove before reinstall packages
    package: name={{ item }} state=absent
    with_items:
    - kubelet
    - kubeadm
    - kubectl
    - kubernetes-cni
    when: full_kube_reinstall is defined and full_kube_reinstall
    tags:
    - kubelet
    - uninstall
    - reset

  - name: stop kubelet for cleanup activities
    systemd: name={{ item }} state=stopped
    with_items:
    - kubelet
    tags:
    - kubelet
    - uninstall
    - reset
    ignore_errors: yes

  - name: remove plugins mount leftovers; Note you have to collect them from the remote storage (e.g. vsphere datastore) also
    #shell: 'umount $(mount | grep " on /var/lib/kubelet/plugins/kubernetes.io/" | cut -f1 -d" ")'
    shell: umount $(mount | grep '/kubelet/plugins/kubernetes.io/' | awk '{print $3}')
    #shell: 'umount $(mount | grep "/kubelet/plugins/kubernetes.io/" | cut -f1 -d" ")'
    with_items:
    - kubelet
    tags:
    - kubelet
    - uninstall
    - reset
    ignore_errors: yes

  - name: remove pods mount leftovers; Note you have to collect them from the remote storage (e.g. vsphere datastore) also
    shell: umount $(mount | grep '/kubelet/pods/' | grep '/volumes/kubernetes.io~' | awk '{print $3}')
    with_items:
    - kubelet
    tags:
    - kubelet
    - uninstall
    - reset
    ignore_errors: yes

  #https://github.com/kubernetes/kubernetes/issues/39557
  - name: cni0/cbr0 IP alloction issue
    shell: 'rm -rf /var/lib/cni/ /var/lib/kubelet/* /etc/cni/ ; ip link delete cni0; ip link delete cbr0 ; ip link delete flannel.1; ip link delete weave'
    ignore_errors: yes
    tags:
    - uninstall
    - reset

  - name: Reset iptables rules
    shell: iptables-save | awk '/^[*]/ { print $1 } /^:[A-Z]+ [^-]/ { print $1 " ACCEPT" ; } /COMMIT/ { print $0; }' | iptables-restore
    when: iptables_reset is defined and iptables_reset
    ignore_errors: yes
    tags:
    - uninstall
    - reset

  - name: remove RPMs
    yum: 
      name: "{{ item }}"
      state: absent
    with_items:
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni

  #- name: restart kubelet for cleanup activities
  #  systemd: name={{ item }} state=restarted
  #  with_items:
  #  - kubelet
  #  when: ! (full_kube_reinstall is defined and full_kube_reinstall )
  #  tags:
  #  - kubelet
  #  - uninstall
  #  - reset
  #  ignore_errors: yes
