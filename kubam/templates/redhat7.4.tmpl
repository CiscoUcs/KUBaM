#version=
# System authorization information
auth --useshadow --enablemd5
# Install OS instead of upgrade
install
# Use network installation
url --url="http://{{ masterIP }}/kubam/redhat7.4/"
# Use graphical install
text
# Firewall configuration
firewall --disabled
firstboot --disable
ignoredisk --only-use=sdb,sda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network --activate --bootproto=static --ip={{ ip }} --netmask={{ netmask }} --gateway={{ gateway }} --nameserver={{ nameserver }} --device=eno1
network  --hostname={{ name }}
# Reboot after installation
reboot
# Root password
rootpw --iscrypted $6$KVZvCsW9P.08qpM7$Yx1KnYmjxhiFcr99ocdpZYDb4MpJb6VEeZO7wrb/XRlaKfJsLkrYpy1oJLJqxbqWJqPqTAb.y.WOWV/dXjDAf0
# SELinux configuration
selinux --disabled
# System services
services --enabled="chronyd"
# System timezone
timezone US/Pacific
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda
autopart --type=lvm
# Partition clearing information
clearpart --all --initlabel

%packages
@^minimal
kexec-tools

%end

%post 

#---- Install our SSH key ----
mkdir -m0700 /root/.ssh/
cat <<EOF >/root/.ssh/authorized_keys
{% for key in keys %}
{{ key }}
{% endfor %}

EOF

chmod 0600 /root/.ssh/authorized_keys

{% if role == "k8s master" or role == "k8s node" %}
#---- Install Ansible ----

yum -y install ansible
curl -O http://{{ masterIP }}/kubam/post/ansible.tgz
tar zxvf ansible.tgz
cd ansible

#---- Update Group Variables ----
cat <<EOF2 >group_vars/all.yml

# kubernetes version
kubernetes_version: 1.9.1
# you can define your own token or let the system
# automatically generate one for you.
kubeadm_token: 62af06.d28bf88c95be9639

#contiv version
contiv_version: 1.1.7
ntp_server: {{ ntp }} 

#contiv etcd information
contiv_etcd_version: 3.0.17
contiv_etcd_advertise_port: 6667
contiv_etcd_listen_port: 6666
master: {{ k8s_master.ip }}

{% if proxy != "" %}
http_proxy: {{ proxy }}
https_proxy: {{ proxy }}
no_proxy: localhost,127.0.0.1,{{ masterIP }},{{ ip }},{{ k8s_master.ip }}
{% endif %}

# yum repository
local_repo: http://{{ masterIP }}/kubam/redhat7.4/

EOF2

#---- Populate /etc/hosts

cat <<EOFHosts >>/etc/hosts

{% for host in hosts %}
{{ host.ip }} {{ host.name }}
{% endfor %}

EOFHosts



### create the firstboot service script to fire when the node boots the first time. 

cat <<EOF3 >/etc/systemd/system/firstboot.service
[Unit]
Description=Ansible Firstboot scripts to bring up Kubernetes cluster
ConditionPathExists=/root/firstboot
Before=getty@tty6.service gdm.service

[Service]
Type=oneshot
RemainAfterExit=yes
TTYPath=/dev/tty6
ExecStartPre=/usr/bin/sleep 5
ExecStartPre=/usr/bin/chvt 6
ExecStartPre=/usr/bin/clear
ExecStart=/usr/local/bin/firstboot.sh 
ExecStopPost=/usr/bin/chvt 1
ExecStopPost=/usr/bin/rm -f /root/firstboot
TimeoutSec=0
StandardOutput=tty
StandardInput=tty
StandardError=tty

[Install]
WantedBy=default.target

EOF3

### trigger to signify the first boot
touch /root/firstboot
### enable service to start
systemctl enable firstboot.service

### script that gets run on first boot is ansible
cat <<EOF4 >/usr/local/bin/firstboot.sh 
#!/usr/bin/bash
set -x
cd /ansible
{% if proxy != "" %}
/usr/bin/ansible-playbook proxy.yml
{% endif %}
/usr/bin/ansible-playbook common.yml
{% if role == "k8s master"  %}
/usr/bin/ansible-playbook master.yml
/usr/bin/ansible-playbook contiv.yml
{% endif %}
{% if role == "k8s node" %}
/usr/bin/ansible-playbook node.yml
{% endif %}

EOF4

### make script executable
chmod 755 /usr/local/bin/firstboot.sh

{% endif %}

%end
